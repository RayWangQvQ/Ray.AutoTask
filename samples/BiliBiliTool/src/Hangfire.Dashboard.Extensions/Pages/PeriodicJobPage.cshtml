@* Generator: Template
    TypeVisibility: Internal
    GeneratePrettyNames: true
    DisableLinePragmas: true*@
@using System
@using System.Collections.Generic
@using Hangfire
@using Hangfire.Dashboard
@using Hangfire.Dashboard.Pages
@using Hangfire.Dashboard.Resources
@using Hangfire.States
@using Hangfire.Storage
@using System.Reflection;
@using Cronos;
@using Hangfire.Dashboard.Extensions.Models;
@using Hangfire.Dashboard.Extensions;
@using Hangfire.Dashboard.Extensions.Resources;

@inherits RazorPage

@{
    Init();
}

<div class="row">
    <div class="col-md-12">
        <h1 class="page-header">@Strings.RecurringJobsPage_Title</h1>

        <div class="js-jobs-list">
            <div class="btn-toolbar btn-toolbar-top">
                @*触发*@
                @if (!IsReadOnly)
                {
                    <button class="js-jobs-list-command btn btn-sm btn-primary"
                        data-url="@Url.To("/recurring/trigger")"
                        data-loading-text="@Strings.RecurringJobsPage_Triggering"
                        disabled="disabled">
                        <span class="glyphicon glyphicon-play-circle"></span>
                        @Strings.RecurringJobsPage_TriggerNow
                    </button>
                }
                @*删除*@
                @if (!IsReadOnly)
                {
                    <button class="js-jobs-list-command btn btn-sm btn-default"
                        data-url="@Url.To("/periodic/remove")"
                        data-loading-text="@Strings.Common_Deleting"
                        data-confirm="@Strings.Common_DeleteConfirm"
                        disabled="disabled">
                        <span class="glyphicon glyphicon-remove"></span>
                        @Strings.Common_Delete
                    </button>
                }
                @if (pager != null)
                {
                    @: @Html.PerPageSelector(pager)
                }
            </div>

            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            @if (!IsReadOnly)
                            {
                                <th class="min-width">
                                    <input type="checkbox" class="js-jobs-list-select-all" />
                                </th>
                            }
                            <th>@Strings.Common_Id</th>
                            <th class="min-width">@Strings.RecurringJobsPage_Table_Cron</th>
                            <th>@Strings.RecurringJobsPage_Table_TimeZone</th>
                            <th>@RayStrings.PeriodicJobsPage_Table_State</th>
                            <th>@Strings.Common_Job</th>
                            <th class="align-right min-width">@Strings.RecurringJobsPage_Table_NextExecution</th>
                            <th class="align-right min-width">@Strings.RecurringJobsPage_Table_LastExecution</th>
                            <th class="align-right min-width">@Strings.Common_Created</th>
                            <th class="align-right min-width">@RayStrings.PeriodicJobsPage_Table_Operation</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var job in periodicJobs)
                        {
                            <tr class="js-jobs-list-rows">
                                @*复选框*@
                                @if (!IsReadOnly)
                                {
                                    <td rowspan="@(job.Error != null ? "2" : "1")">
                                        <input type="checkbox" class="js-jobs-list-checkbox" name="jobs[]" value="@job.Id" />
                                    </td>
                                }
                                @*编号*@
                                <td class="word-break width-15">@job.Id</td>
                                @*Cron*@
                                <td style="min-width: 125px" class="min-width">
                                    @* ReSharper disable once EmptyGeneralCatchClause *@
                                    @{
                                        string cronDescription = null;
                                        bool cronError = false;

                                        if (!String.IsNullOrEmpty(job.Cron))
                                        {
                                            try
                                            {
                                                //RecurringJobEntity.ParseCronExpression(job.Cron);
                                                //通过反射调用
                                                Assembly asm = Assembly.GetAssembly(typeof(Hangfire.RecurringJob));
                                                MethodInfo? mf = asm?.GetType("Hangfire.RecurringJobEntity")
                                                ?.GetMethod("ParseCronExpression", BindingFlags.NonPublic | BindingFlags.Static);
                                                //CronExpression saf = (CronExpression)mf.Invoke(null, null);
                                                mf?.Invoke(null, new[] { job.Cron });
                                            }
                                            catch (Exception ex)
                                            {
                                                cronDescription = ex.Message;
                                                cronError = true;
                                            }

                                            if (cronDescription == null)
                                            {
#if FEATURE_CRONDESCRIPTOR
#endif
                                            }
                                        }
                                    }

                                    @if (cronDescription != null)
                                    {
                                        <code title="@cronDescription" class="cron-badge">
                                            @if (cronError)
                                            {
                                                <span class="glyphicon glyphicon-exclamation-sign"></span>
                                            }
                                            @job.Cron
                                        </code>
                                    }
                                    else
                                    {
                                        <code class="cron-badge">@job.Cron</code>
                                    }
                                </td>
                                @*时区*@
                                <td>
                                    @{
                                        var timeZoneDisplayInfo = job.GetTimeZoneDisplayInfo(this.DashboardOptions);
                                        <span title="@timeZoneDisplayInfo.Item1" data-container="body">
                                            @job.TimeZoneId
                                            @if (timeZoneDisplayInfo.Item2 != null)
                                            {
                                                <span class="glyphicon glyphicon-exclamation-sign" title="@timeZoneDisplayInfo.Item2.Message"></span>
                                            }
                                        </span>
                                    }
                                </td>
                                @*状态*@
                                <td>
                                    @if (job.JobState == "Running")
                                    {
                                        <span class="label label-success">@job.JobState</span>
                                    }
                                    else
                                    {
                                        <span class="label label-danger">@job.JobState</span>
                                    }
                                </td>
                                @*作业*@
                                <td class="word-break width-30">
                                    @if (job.Job != null)
                                    {
                                        @: @Html.JobName(job.Job)
                                    }
                                    else if (job.LoadException != null && job.LoadException.InnerException != null)
                                    {
                                        <em>@job.LoadException.InnerException.Message</em>
                                    }
                                    else if (job.LoadException != null)
                                    {
                                        <em>@job.LoadException.Message</em>
                                    }
                                    else
                                    {
                                        <em>@Strings.Common_NotAvailable</em>
                                    }
                                </td>
                                @*下一次执行时间*@
                                <td class="align-right min-width">
                                    @if (!job.NextExecution.HasValue)
                                    {
                                        if (job.Error != null)
                                        {
                                            <span class="label label-danger text-uppercase">@Strings.Common_Error</span>
                                        }
                                        else
                                        {
                                            <span class="label label-default text-uppercase" title="@Strings.RecurringJobsPage_RecurringJobDisabled_Tooltip">@Strings.Common_Disabled</span>
                                        }

                                    }
                                    else if (job.RetryAttempt > 0)
                                    {
                                        <span class="label label-warning">@Html.RelativeTime(job.NextExecution.Value)</span>
                                    }
                                    else
                                    {
                                        @Html.RelativeTime(job.NextExecution.Value)
                                    }
                                </td>
                                @*最后一次执行*@
                                <td class="align-right min-width">
                                    @if (job.LastExecution != null)
                                    {
                                        if (!String.IsNullOrEmpty(job.LastJobId))
                                        {
                                            <a href="@Url.JobDetails(job.LastJobId)" style="text-decoration: none">
                                                <span class="label label-default label-hover" style="@($"background-color: {JobHistoryRenderer.GetForegroundStateColor(job.LastJobState ?? EnqueuedState.StateName)};")">
                                                    @Html.RelativeTime(job.LastExecution.Value)
                                                </span>
                                            </a>
                                        }
                                        else
                                        {
                                            <em>
                                                @Strings.RecurringJobsPage_Canceled @Html.RelativeTime(job.LastExecution.Value)
                                            </em>
                                        }
                                    }
                                    else
                                    {
                                        <em>@Strings.Common_NotAvailable</em>
                                    }
                                </td>
                                @*创建时间*@
                                <td class="align-right min-width">
                                    @if (job.CreatedAt != null)
                                    {
                                        @Html.RelativeTime(job.CreatedAt.Value)
                                    }
                                    else
                                    {
                                        <em>N/A</em>
                                    }
                                </td>
                                @*操作*@
                                <td style="min-width:200px" class="align-right">
                                    <button class="btn btn-info btn-xs">Edit</button>
                                    @if (job.JobStateEnum == JobState.Running)
                                    {
                                        <button type="button" class="js-period-jobs-list-command btn btn-warning btn-xs"
                                        data-url="@Url.To($"/RecurringJobManage/Stop?jobId={job.Id}")">
                                            Stop
                                        </button>
                                        <button class="js-period-jobs-list-command btn btn-primary btn-xs">
                                            Excute
                                        </button>
                                        <button class="btn btn-danger btn-xs">Delete</button>
                                    }
                                    @if (job.JobStateEnum == JobState.Stoped)
                                    {
                                        <button class="js-period-jobs-list-command btn btn-success btn-xs"
                                        data-url="@Url.To($"/RecurringJobManage/Start?jobId={job.Id}")">
                                            Start
                                        </button>
                                    }
                                </td>
                                @if (job.Error != null)
                                {

                                <tr>
                                    <td colspan="@(IsReadOnly ? "6" : "7")" class="failed-job-details">
                                        <pre class="stack-trace"><code>@Html.StackTrace(job.Error)</code></pre>
                                    </td>
                                </tr>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (pager != null)
            {
                @: @Html.Paginator(pager)
            }
        </div>
        }
    </div>
</div>

@*导入Hangfire包中内嵌的js资源文件（localhost:port/hangfire/js0）*@
<script src="js0"></script>

<script>
    $('.js-jobs-list').each(function () {
        var container = this;

        $(this).on('click', '.js-period-jobs-list-command', function (e) {
            var $this = $(this);

            $this.prop('disabled');
            var loadingDelay = setTimeout(function () {
                $this.button('loading');
            }, 100);

            $.post($this.data('url'), {}, function () {
                clearTimeout(loadingDelay);
                window.location.reload();
            });

            e.preventDefault();
        });
    })

</script>
