{
  //Cookie集合，取自浏览器，必填
  "BiliBiliCookies": [ //Cookie字符串集合，登录bilibili后F12获取，形如"_uuid=abcd; buvid3=1234; sid=abc123"
    ""
  ],

  "RunTasks": "Daily", //要运行的任务名称[Daily,LiveLottery]，多个使用&分隔，如“Daily&LiveLottery”,建议使用命令行参数指定

  //程序自定义个性化配置
  "DailyTaskConfig": {
    "IsWatchVideo": true, //是否观看视频
    "IsShareVideo": true, //是否分享视频
    "NumberOfCoins": 5, //每日设定的投币数 [0,5]
    "SelectLike": true, //投币时是否同时点赞[false,true]
    "SupportUpIds": ",341688380,1585227649,", //优先选择支持的up主Id集合，多个以英文逗号分隔，如："123,456"。配置后会优先从指定的up主下挑选视频进行观看、分享和投币，不配置或配置为-1则表示没有特别支持的up，会从关注和排行耪中随机获取支持视频
    "DayOfAutoCharge": -1, //每月几号自动充电[-1,31]，-1表示不指定，默认月底最后一天；0表示不充电
    "AutoChargeUpId": "341688380", //指定支持的UP主Id，-1表示自己
    "ChargeComment": "", //充电后留言
    "DayOfReceiveVipPrivilege": 1, //每月几号自动领取会员权益的[-1,31]，-1表示不指定，默认每月1号；0表示不自动领取
    "DayOfExchangeSilver2Coin": 0, //每月几号执行银瓜子兑换硬币[-1,31]，-1表示不指定，默认每月最后一天；-2表示每天；0表示不进行兑换
    "DevicePlatform": "android" //执行客户端操作时的平台 [ios,android]
  },

  "LiveLotteryTaskConfig": {
    "ExcludeAwardNames": "舰|船|航海|代金券|自拍|照|写真|图|提督", //根据关键字排除包含这些文字的奖品名称，多个用“|”分隔，如“照|舰|船|航海|代金券|自拍”
    "IncludeAwardNames": "", //根据关键字指定奖品名称必须包含的文字，多个用“|”分隔，如“红包|现金|块|元”
    "AutoGroupFollowings": true //抽奖结束后是否自动将关注的主播分组到“天选时刻”分组，值域[true,false] 
  },

  "UnfollowBatchedTaskConfig": {
    "GroupName": "天选时刻", //取关的分组名称
    "Count": 2 //本次取关个数（倒序，从后往前取关）
  },

  //安全相关配置
  "Security": {
    "IsSkipDailyTask": false, //是否跳过执行任务，用于特殊情况下，通过配置灵活的开启和关闭任务
    "RandomSleepMaxMin": 20, //随机睡眠的最大时长(单位为分钟)，用于使每天运行时间在范围内相对随机，值域[0,+]；配置为0表示不进行休眠
    "IntervalSecondsBetweenRequestApi": 30, //两次调用api之间的间隔[0,+](单位为秒)。因为有人担心在几秒内连续调用api会被b站安全机制发现，所以为不放心的朋友添加了间隔秒数配置，两次连续调用Api之间会大于该秒数
    "IntervalMethodTypes": "GET,POST", //间隔秒数所针对的HttpMethod，多个用英文逗号隔开，当前有GET和POST两种，可配置如“GET,POST”
    "UserAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36 Edg/87.0.664.41", //请求B站接口时头部传递的User-Agent
    "WebProxy": "" //代理
  },

  //日志
  "Serilog": {
    "Using": [
      "Serilog.Sinks.Console",
      "Serilog.Sinks.Debug",
      "Serilog.Sinks.File",
      "Ray.Serilog.Sinks.TelegramBatched",
      "Ray.Serilog.Sinks.WorkWeiXinBatched",
      "Ray.Serilog.Sinks.DingTalkBatched",
      "Ray.Serilog.Sinks.ServerChanBatched",
      "Ray.Serilog.Sinks.CoolPushBatched",
      "Ray.Serilog.Sinks.OtherApiBatched",
      "Ray.Serilog.Sinks.PushPlusBatched"
    ],
    "MinimumLevel": {
      "Default": "Debug",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning",
        "Microsoft.AspNetCore": "Warning"
      }
    },
    "WriteTo": [
      //0.Console
      {
        "Name": "Console",
        "Args": {
          "restrictedToMinimumLevel": "Information",
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      },
      //1.Debug
      { "Name": "Debug" },
      //2.File
      {
        "Name": "File",
        "Args": {
          "path": "Logs/log.txt",
          "restrictedToMinimumLevel": "Verbose",
          "rollingInterval": 3
        }
      },

      //3.Telegram机器人（https://core.telegram.org/bots/api#available-methods）
      {
        "Name": "TelegramBatched",
        "Args": {
          "botToken": "",
          "chatId": "",
          "restrictedToMinimumLevel": "Information"
        }
      },
      //4.企业微信机器人（https://work.weixin.qq.com/api/doc/90000/90136/91770）
      {
        "Name": "WorkWeiXinBatched",
        "Args": {
          "webHookUrl": "", //群机器人生成
          "restrictedToMinimumLevel": "Information"
        }
      },
      //5.钉钉机器人（https://developers.dingtalk.com/document/app/overview-of-group-robots）
      {
        "Name": "DingTalkBatched",
        "Args": {
          "webHookUrl": "", //群机器人生成
          "restrictedToMinimumLevel": "Information"
        }
      },
      //6.Server酱（http://sc.ftqq.com/9.version）
      {
        "Name": "ServerChanBatched",
        "Args": {
          "scKey": "", //已过时，待删除
          "turboScKey": "", //平台生成的ScKey
          "containsTrigger": "开始推送",
          "restrictedToMinimumLevel": "Information"
        }
      },
      //7.酷推
      {
        "Name": "CoolPushBatched",
        "Args": {
          "sKey": "",
          "restrictedToMinimumLevel": "Information"
        }
      },
      //8.自定义Api
      {
        "Name": "OtherApiBatched",
        "Args": {
          "api": "",
          "placeholder": "#msg#", //占位符
          "bodyJsonTemplate": "{\"msgtype\":\"markdown\",\"markdown\":{\"content\":#msg#}}", //json模板，会当作post的body，占位符会被日志内容替换（日志文本为json字符串，已经带有引号，所有模板中占位符不用使用引号包裹，如例子所示为企业微信的标准推送格式）
          "restrictedToMinimumLevel": "Information"
        }
      },
      //9.PushPlus（http://www.pushplus.plus/doc/）
      {
        "Name": "PushPlusBatched",
        "Args": {
          "token": "",
          "channel": "", //渠道,值域[wechat,webhook,cp,sms,mail]，分别对应[微信公众号，指定第三方webhook，企业微信应用，短信，邮件]
          "topic": "", //群组编码,用于群发，没有就不填(不填仅发送给自己)；channel为webhook时无效
          "webhook": "", //webhook编码(不是地址)，仅在channel使用webhook渠道和CP渠道时需要填写
          "restrictedToMinimumLevel": "Information"
        }
      }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId" ]
  },

  "PlateformType": "GitHubActions",
  "IsPrd": false,
  "CloseConsoleWhenEnd": "0" //运行结束后是否立即关闭，默认不关，为了本地执行exe时保持窗口，其他平台运行时建议配置为1
}
